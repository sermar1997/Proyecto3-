/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Conexión.Conexion;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Clase que da de baja a un propietario
 *
 * @author Sergio Marco
 * @version 23/05/2017
 */
public class VentanaBajaPropietario extends javax.swing.JFrame {

    DefaultTableModel modelo;
    Conexion conn;

    /**
     * Creates new form VentanaBajaPropietario
     *
     * @param conn parámetro que pasa la conexión
     */
    public VentanaBajaPropietario(Conexion conn) {
        setIconImage(new ImageIcon(getClass().getResource("..\\Imagenes\\icono.jpg")).getImage());
        this.conn = conn;
        initComponents();
        //Por defecto los botones estarán desactivados
        tNombre.setEnabled(false);
        tApellido.setEnabled(false);
        tLefono.setEnabled(false);
        tProvincia.setEnabled(false);
        //Cojo el modelo de la tabla
        modelo = (DefaultTableModel) tabla.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tDni = new javax.swing.JTextField();
        tNombre = new javax.swing.JTextField();
        tApellido = new javax.swing.JTextField();
        tLefono = new javax.swing.JTextField();
        tProvincia = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        bCancelar = new javax.swing.JButton();
        bVehiculo = new javax.swing.JButton();
        bProp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("DAR  DE BAJA A PROPIETARIOS");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logo.jpg"))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("DNI:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("NOMBRE:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("APELLIDO:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("TELEFONO:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("PROVINCIA:");

        tDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tDniActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matricula", "Modelo", "Año", "Propietario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);

        bCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cancel.jpg"))); // NOI18N
        bCancelar.setText("CANCELAR");
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });

        bVehiculo.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        bVehiculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/coche.jpg"))); // NOI18N
        bVehiculo.setText("ELIMINAR VEHICULOS");
        bVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVehiculoActionPerformed(evt);
            }
        });

        bProp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/baja.jpg"))); // NOI18N
        bProp.setText("ELIMINAR PROPIETARIO");
        bProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPropActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tLefono, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tProvincia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(320, 320, 320)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tDni, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                            .addComponent(tNombre)
                            .addComponent(tApellido))))
                .addGap(24, 24, 24))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(bProp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(bVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(tDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(tLefono, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCancelar)
                    .addComponent(bVehiculo)
                    .addComponent(bProp))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Comprueba que el dni sea correcto y no uno inventado
     *
     * @param dni parámetro que le pasa el dni introducido para validar.
     * @return true or false en función de si el dni introducido es válido o no
     */
    private boolean compruebaDNI(String dni) {
        String letras = "TRWAGMYFPDXBNJZSQVHLCKE";
        String numeros = "0123456789";
        String NIE = "XYZ";
        int pos;
        //Si no tiene longitud 9 ya ni sigo
        if (dni.length() == 9) {
            String primera = dni.substring(0, 1);
            //Si la primera letra es de dni extranjero
            if (primera.toUpperCase().indexOf(NIE) != -1) {
                //Si los caracteres del 1 al 7 son numéricos sigo con la comprobación
                //si hay alguno que no lo es, el DNI ya es incorrecto
                for (int i = 1; i < dni.length() - 1; i++) {
                    if (numeros.indexOf(dni.substring(i, i + 1)) == -1) {
                        return false;
                    }
                }

                //Sustituyo la primera letra del NIE por el número al que se corresponde para
                //calcular el dígito de control.
                String num;
                if (primera.toUpperCase().equals("X")) {
                    num = "0";
                } else if (primera.toUpperCase().equals("Y")) {
                    num = "1";
                } else {
                    num = "2";
                }
                //Calculo y compruebo el dígito de control
                //Si está mal ya devuelvo false
                int numDni = Integer.parseInt("0" + dni.substring(1, 7));
                pos = numDni % 23;
                if (!dni.substring(7, 8).equalsIgnoreCase(letras.substring(pos, pos + 1))) {
                    return false;
                }
                //Si no es un DNI extranjero, sino que es de un español
            } else {
                //Compruebo que todos los caracteres menos el último son
                //dígitos, si no devuelvo false
                for (int i = 0; i < dni.length() - 1; i++) {
                    if (numeros.indexOf(dni.substring(i, i + 1)) == -1) {
                        return false;
                    }
                }
                //Calculo el dígito de control
                int numDni = Integer.parseInt(dni.substring(0, 8));
                pos = numDni % 23;
                if (!dni.substring(8, 9).equalsIgnoreCase(letras.substring(pos, pos + 1))) {
                    return false;
                }
            }
            //Si ha llegado hasta aquí es porque es correcto
            return true;
        }
        return false;
    }

    /**
     * Al introducir el dni correcto, mostrará toda la información del
     * propietario
     *
     * @param evt evento que rellena todos los campos del propietario
     */
    private void tDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tDniActionPerformed
        ResultSet rs = null;
        PreparedStatement ps = null;
        try {
            //Si el dni no es correcto mostrará un mensaje de error y deberá introducirlo otra vez
            if (!compruebaDNI(tDni.getText())) {
                JOptionPane.showMessageDialog(this, "!DNI INCORRECTO¡", "DNI incorrecto", JOptionPane.ERROR_MESSAGE);
                tDni.setText("");
            } else {
                //Si es correcto se habilitan los botones
                tNombre.setEnabled(true);
                tApellido.setEnabled(true);
                tLefono.setEnabled(true);
                tProvincia.setEnabled(true);
                //Lanzamos la consulta para mostrar todos los datos
                ps = conn.prepararSentencia("SELECT * FROM PROPIETARIO WHERE DNI LIKE ?;");
                //Le damos valor al comodín de la consulta
                ps.setString(1, tDni.getText());
                //Ejecutamos la consulta
                rs = ps.executeQuery();
                //Si el propietario existe rellenamos los campos con sus datos
                if (rs.next()) {
                    tNombre.setText(rs.getString(2));
                    tApellido.setText(rs.getString(3));
                    tLefono.setText(rs.getString(4));
                    tProvincia.setText(rs.getString(5));
                } else {
                    //Si no existe mostramos mensaje de error
                    JOptionPane.showMessageDialog(this, "Este Propietario no existe en la base de datos", "Usuario inexistente", JOptionPane.ERROR_MESSAGE);

                }
                //Método que rellena la tabla con los vehículos del propietario
                rellenaTabla();
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            // Cerrar statement
            if (ps != null) {
                try {
                    ps.close();
                } catch (SQLException ex) {
                    ex.getMessage();
                }
            }
        }
    }//GEN-LAST:event_tDniActionPerformed
    /**
     * Al pulsar este botón se vaciarán todos los campos
     *
     * @param evt parámetro que llama al evento que vaciará todos los campos
     */
    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        limpiarDatos();
    }//GEN-LAST:event_bCancelarActionPerformed
    /**
     * Método que deja todos los campos y tablas vacíos.
     */
    private void limpiarDatos() {
        //Vacíamos los datos que hay en los campos
        tDni.setText("");
        tNombre.setText("");
        tApellido.setText("");
        tLefono.setText("");
        tProvincia.setText("");
        //Deshabilitamos botones
        tNombre.setEnabled(false);
        tApellido.setEnabled(false);
        tLefono.setEnabled(false);
        tProvincia.setEnabled(false);
        //Método que borra los datos de la tabla
        LimpiarTabla();
    }

    /**
     * Método para que al cerrar una ventana nos guarde los cambios realizados o
     * los descarte
     */
    public void cerrar() {
        Object[] opciones = {"Guardar Cambios", "Descartar Cambios"};
        int eleccion = JOptionPane.showOptionDialog(rootPane, "¿Desea realizar los cambios?", "Mensaje de Confirmacion",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, opciones, "Aceptar");
        if (eleccion == JOptionPane.YES_OPTION) {
            try {
                conn.confirmar();
                dispose();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "No se ha podido realizar los cambios", "Confirmar", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            try {
                conn.descartar();
                dispose();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "No se ha podido realizar los cambios", "Confirmar", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    /**
     * Método que deja la tabla en blanco
     */
    private void LimpiarTabla() {
        for (int i = 0; i < tabla.getRowCount(); i++) {
            modelo.removeRow(i);
            i -= 1;
        }
    }

    /**
     * Método que refresca los datos de la tabla
     */
    private void RefrescarTabla() {
        for (int i = 0; i < tabla.getRowCount(); i++) {
            modelo.removeRow(i);
            i -= 1;
        }
        rellenaTabla();
    }

    /**
     * Al pulsar este botón se borrarán los vehículos de el propietario
     *
     * @param evt parámetro que llama al evento que borra los vehículos de un
     * propietario
     */
    private void bVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVehiculoActionPerformed
        PreparedStatement ps = null;
        try {
            //Si el dni es incorrecto mostrará el error y deberemos volver a escribirlo
            if (!compruebaDNI(tDni.getText())) {
                JOptionPane.showMessageDialog(this, "!DNI INCORRECTO¡", "DNI incorrecto", JOptionPane.ERROR_MESSAGE);
                tDni.setText("");
            } else {
                //Si es correcto se lanza la consulta
                ps = conn.prepararSentencia("DELETE FROM VEHICULO WHERE PROPIETARIO LIKE ?;");
                //Se le da valor al comodín de la consulta
                ps.setString(1, tDni.getText());
                //Se ejecuta la consulta
                int resultado = ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "¡VEHICULO ELIMINADO!", "Vehiculo", JOptionPane.INFORMATION_MESSAGE);
                //Se refresca la tabla
                RefrescarTabla();
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            // Cerrar statement
            if (ps != null) {
                try {
                    ps.close();
                } catch (SQLException ex) {
                    ex.getMessage();
                }
            }
        }
    }//GEN-LAST:event_bVehiculoActionPerformed
    /**
     * Método que elimina el propietario introducido
     *
     * @param evt parámetro que llama al evento que elimina a un propietario
     */
    private void bPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPropActionPerformed
        PreparedStatement ps = null;
        try {
            if (!compruebaDNI(tDni.getText())) {
                //Si el dni es incorrecto salta el error y deberemos volver a escribirlo
                JOptionPane.showMessageDialog(this, "!DNI INCORRECTO¡", "DNI incorrecto", JOptionPane.ERROR_MESSAGE);
                tDni.setText("");
            } else {
                //Se lanza la consulta
                ps = conn.prepararSentencia("DELETE FROM PROPIETARIO WHERE DNI LIKE ?;");
                //Se le da valor al comodín de la consulta
                ps.setString(1, tDni.getText());
                //Se ejecuta la consulta
                int resultado = ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "¡PROPIETARIO ELIMINADO!", "Propietario", JOptionPane.INFORMATION_MESSAGE);
                //Deja los campos vacíos
                limpiarDatos();
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            // Cerrar statement
            if (ps != null) {
                try {
                    ps.close();
                } catch (SQLException ex) {
                    ex.getMessage();
                }
            }
        }
    }//GEN-LAST:event_bPropActionPerformed
    /**
     * Evento para que al cerrar te de la opción de guardar los cambios o
     * descartarlos
     *
     * @param evt
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cerrar();
    }//GEN-LAST:event_formWindowClosing
    /**
     * Método que rellena la tabla con los vehículos que posee un propietario
     */
    private void rellenaTabla() {
        try {
            //Lanzamos la consulta 
            PreparedStatement ps = conn.prepararSentencia("SELECT V.MATRICULA, V.MODELO, V.ANIO, concat_ws(' ',P.NOMBRE,P.APELLIDO)"
                    + "FROM VEHICULO V JOIN PROPIETARIO P ON(V.PROPIETARIO = P.DNI) WHERE V.PROPIETARIO LIKE ?");
            //Le damos valor al comodín de la consulta
            ps.setString(1, tDni.getText());
            //Ejecutamos la consulta
            ResultSet rs = ps.executeQuery();
            //Mientras haya datos, añadiremos filas a la tabla
            while (rs.next()) {
                modelo.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)});
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancelar;
    private javax.swing.JButton bProp;
    private javax.swing.JButton bVehiculo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tApellido;
    private javax.swing.JTextField tDni;
    private javax.swing.JTextField tLefono;
    private javax.swing.JTextField tNombre;
    private javax.swing.JTextField tProvincia;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
